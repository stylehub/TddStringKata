<?php

require_once dirname(__FILE__) . '/../StringKata.php';

/**
 * Test class for StringKata.
 * Generated by PHPUnit on 2012-09-11 at 10:06:55.
 */
class StringKataTest extends PHPUnit_Framework_TestCase {

    /**
     * @var StringKata
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object = new StringKata;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }
    
    public function testAddReturnsInteger() {
        $this->assertInternalType(
            'integer',
            $this->object->add(''),
            'Return value type must be integers'
        );
    }

    public function testAddWithEmptyString() {
        $this->assertEquals(
            0,
            $this->object->add(''),
            'Empty string should be 0'
        );
    }

    public function testAddWithSingleNumber() {
        $num = "5";
        $this->assertEquals(
            (int)$num,
            $this->object->add($num),
            "testAddIsOneNum Equals fail"
        );
        $this->assertInternalType(
            'integer',
            $this->object->add($num),
            "testAddIsOneNum InternalType fail"
        );
    }
    
    /**
     * @expectedException InvalidArgumentException
     */
    public function testAddThrowsException()
    {
        $this->object->add(5);
    }
    
    public function testAddSum2() {
        $this->assertEquals(
            15,
            $this->object->add("10,5"),
            "10,5 return 15"
        );
    }
    
    public function testAddSumLot() {
        $this->assertEquals(
            45,
            $this->object->add("10,5,5,25"),
            "10,5,5,25 return 45"
        );
    }
    

    /**
     * @expectedException UnexpectedValueException
     */
    public function testAddWithStringThrowsExceptionA()
    {
        $this->object->add('10,A');
    }

    /**
     * @expectedException UnexpectedValueException
     */
    public function testAddWithStringThrowsExceptionB()
    {
        $this->object->add('cica, 10');
    }

    /**
     * @expectedException UnexpectedValueException
     */
    public function testAddWithStringThrowsExceptionC()
    {
        $this->object->add('10,a tamÃ¡s egy kÃ¶csÃ¶g');
    }

    /**
     * @expectedException UnexpectedValueException
     */
    public function testAddWithStringThrowsExceptionD()
    {
        $this->object->add('.aerjkzhrtgjkl');
    }

    /**
     * @expectedException UnexpectedValueException
     */
    public function testAddWithStringThrowsExceptionE()
    {
        $this->object->add('10.5');
    }
}